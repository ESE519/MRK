


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         
    4 00000000                 EXPORT           PendSV_Handler
    5 00000000                 EXPORT           _swap
    6 00000000                 EXPORT           nrk_start_high_ready_task
    7 00000000                 EXPORT           Switch
    8 00000000                 EXPORT           _nrk_spin_wait_1us
    9 00000000         
   10 00000000         
   11 00000000                 EXTERN           nrk_high_ready_TCB
   12 00000000                 EXTERN           _nrk_timer_tick
   13 00000000                 EXTERN           task_addr
   14 00000000                 EXTERN           nrk_kernel_stk_ptr
   15 00000000         
   16 00000000 00000000 
                       ID_OFFSET
                               equ              0           ; 0 word (0byte) of
                                                            fset
   17 00000000 00000004 
                       STACK_OFFSET
                               equ              4           ; 1 word (4byte) of
                                                            fset
   18 00000000 00000008 
                       PRIO_OFFSET
                               equ              8           ; 2 word (8byte) of
                                                            fset
   19 00000000 00000014 
                       LIMIT_OFFSET
                               equ              20          ; 5 word (20byte) o
                                                            ffset
   20 00000000 E000ED22 
                       NVIC_SYSPRI14
                               equ              0xE000ED22
   21 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               equ              0xFF
   22 00000000 E000ED04 
                       NVIC_INT_CTRL
                               equ              0xE000ED04
   23 00000000 10000000 
                       NVIC_PENDSVSET
                               equ              0x10000000
   24 00000000         
   25 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000                 THUMB
   27 00000000                 PRESERVE8
   28 00000000         
   29 00000000         _nrk_spin_wait_1us
   30 00000000 BF00            NOP
   31 00000002 BF00            NOP
   32 00000004 F04F 001D       MOV              R0,#29
   33 00000008         loop
   34 00000008 1E40            SUBS             R0,R0,#1
   35 0000000A D1FD            BNE              loop
   36 0000000C 4770            BX               LR
   37 0000000E         
   38 0000000E         nrk_start_high_ready_task



ARM Macro Assembler    Page 2 


   39 0000000E         
   40 0000000E 4817            LDR              R0, =NVIC_SYSPRI14 ; (1) Set th
                                                            e PendSV exception 
                                                            priority
   41 00000010 F04F 01FF       LDR              R1, =NVIC_PENDSV_PRI
   42 00000014 7001            STRB             R1, [R0]
   43 00000016 F04F 0000       MOV              R0, #0      ; (2) Set PSP to 0 
                                                            for initial context
                                                             switch call
   44 0000001A F380 8809       MSR              PSP, R0
   45 0000001E 4814            LDR              R0, =NVIC_INT_CTRL ; (4) Trigge
                                                            r the PendSV except
                                                            ion
   46 00000020 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   47 00000024 6001            STR              R1, [R0]
   48 00000026 B662            CPSIE            I           ; (5) Enable interr
                                                            upts at processor l
                                                            evel
   49 00000028         
   50 00000028         
   51 00000028         ; Function to initiate a SetPend Exception to swap tasks
                        ---------------------------------
   52 00000028         _swap
   53 00000028 4811            LDR              R0, =NVIC_INT_CTRL ; trigger th
                                                            e PendSV exception
   54 0000002A F04F 5180       LDR              R1, =NVIC_PENDSVSET
   55 0000002E 6001            STR              R1, [R0]
   56 00000030 4770            BX               LR
   57 00000032         
   58 00000032         ; Main task switching and scheduling functions ---------
                       ----------------------------------
   59 00000032         PendSV_Handler                       ; entered here as h
                                                            andler for context 
                                                            switch
   60 00000032 B672            CPSID            I           ; Prevent interrupt
                                                            ion during context 
                                                            switch
   61 00000034 F3EF 8009       MRS              R0, PSP     ; (1) PSP is proces
                                                            s stack pointer
   62 00000038 B130            CBZ              R0, OSPendSV_nosave ; Skip regi
                                                            ster save the first
                                                             time
   63 0000003A F1A0 0020       SUB              R0, R0, #0x20 ; (2) Save remain
                                                            ing regs r4-11 on p
                                                            rocess stack
   64 0000003E E880 0FF0       STM              R0, {R4-R11}
   65 00000042 490C            LDR              R1, =nrk_high_ready_TCB ; (3) O
                                                            STCBCur->OSTCBStkPt
                                                            r = SP;
   66 00000044 6809            LDR              R1, [R1]
   67 00000046 6008            STR              R0, [R1]    ; R0 is SP of proce
                                                            ss being switched o
                                                            ut
   68 00000048         
   69 00000048         OSPendSV_nosave
   70 00000048         
   71 00000048 F7FF FFFE       bl               _nrk_timer_tick
   72 0000004C         
   73 0000004C         Switch



ARM Macro Assembler    Page 3 


   74 0000004C F06F 0E06       mov              lr,#0xFFFFFFF9
   75 00000050         ;LDR R0, __OS_PrioCur ; (5) OSPrioCur = OSPrioHighRdy
   76 00000050         ;LDR R1, __OS_PrioHighRdy
   77 00000050         ;LDRB R2, [R1]
   78 00000050         ;STRB R2, [R0]
   79 00000050         ;LDR R0, __OS_TCBCur ; (6) OSTCBCur = OSTCBHighRdy;
   80 00000050 4908            LDR              R1, =nrk_high_ready_TCB
   81 00000052 680A            LDR              R2, [R1]
   82 00000054         ;STR R2, [R0]
   83 00000054 6810            LDR              R0, [R2]    ; (7) R0 is new tas
                                                            k SP
   84 00000056         ; SP = OSTCBHighRdy->OSTCBStkPtr;
   85 00000056 E890 0FF0       LDM              R0, {R4-R11} ; (8) Restore R4-R
                                                            11 from new task st
                                                            ack
   86 0000005A F100 0020       ADD              R0, R0, #0x20
   87 0000005E F380 8809       MSR              PSP, R0     ; Load PSP with new
                                                             task SP
   88 00000062 F04E 0E04       ORR              LR, LR, #0x04 ; Ensure exceptio
                                                            n return uses proce
                                                            ss stack
   89 00000066 B662            CPSIE            I
   90 00000068 4770            BX               LR          ; (9) Exception ret
                                                            urn
   91 0000006A         
   92 0000006A         
   93 0000006A                 END
              00 00 E000ED22 
              E000ED04 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\build\
my_asm.d -o.\build\my_asm.o -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include 
-IC:\Keil\ARM\Inc\NXP\LPC17xx --list=.\build\my_asm.lst mrk_uvision_lpc1768\mrk
\my_asm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      None
Comment: .text unused
OSPendSV_nosave 00000048

Symbol: OSPendSV_nosave
   Definitions
      At line 69 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 62 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: OSPendSV_nosave used once
PendSV_Handler 00000032

Symbol: PendSV_Handler
   Definitions
      At line 59 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 4 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: PendSV_Handler used once
Switch 0000004C

Symbol: Switch
   Definitions
      At line 73 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 7 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: Switch used once
_nrk_spin_wait_1us 00000000

Symbol: _nrk_spin_wait_1us
   Definitions
      At line 29 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 8 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: _nrk_spin_wait_1us used once
_swap 00000028

Symbol: _swap
   Definitions
      At line 52 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 5 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: _swap used once
loop 00000008

Symbol: loop
   Definitions
      At line 33 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 35 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: loop used once
nrk_start_high_ready_task 0000000E

Symbol: nrk_start_high_ready_task



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 38 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 6 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: nrk_start_high_ready_task used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ID_OFFSET 00000000

Symbol: ID_OFFSET
   Definitions
      At line 16 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      None
Comment: ID_OFFSET unused
LIMIT_OFFSET 00000014

Symbol: LIMIT_OFFSET
   Definitions
      At line 19 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      None
Comment: LIMIT_OFFSET unused
NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 22 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 45 in file mrk_uvision_lpc1768\mrk\my_asm.s
      At line 53 in file mrk_uvision_lpc1768\mrk\my_asm.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 23 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 46 in file mrk_uvision_lpc1768\mrk\my_asm.s
      At line 54 in file mrk_uvision_lpc1768\mrk\my_asm.s

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 21 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 41 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 20 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 40 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: NVIC_SYSPRI14 used once
PRIO_OFFSET 00000008

Symbol: PRIO_OFFSET
   Definitions
      At line 18 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      None
Comment: PRIO_OFFSET unused
STACK_OFFSET 00000004



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: STACK_OFFSET
   Definitions
      At line 17 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      None
Comment: STACK_OFFSET unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

_nrk_timer_tick 00000000

Symbol: _nrk_timer_tick
   Definitions
      At line 12 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 71 in file mrk_uvision_lpc1768\mrk\my_asm.s
Comment: _nrk_timer_tick used once
nrk_high_ready_TCB 00000000

Symbol: nrk_high_ready_TCB
   Definitions
      At line 11 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      At line 65 in file mrk_uvision_lpc1768\mrk\my_asm.s
      At line 80 in file mrk_uvision_lpc1768\mrk\my_asm.s

nrk_kernel_stk_ptr 00000000

Symbol: nrk_kernel_stk_ptr
   Definitions
      At line 14 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      None
Comment: nrk_kernel_stk_ptr unused
task_addr 00000000

Symbol: task_addr
   Definitions
      At line 13 in file mrk_uvision_lpc1768\mrk\my_asm.s
   Uses
      None
Comment: task_addr unused
4 symbols
352 symbols in table
